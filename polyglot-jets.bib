@online{pivarski2022,
  author       = {Jim Pisarski},
  howpublished = {},
  title        = {History and Adoption of Programming Languages in {NHEP}},
  year         = {2022},
  url          = {https://indico.jlab.org/event/505/contributions/9207/}
}

@article{bib:julia_freshapproach,
	author = {Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B.},
	title = "Julia: A Fresh Approach to Numerical Computing",
	journal = {SIAM Review},
	volume = {59},
	number = {1},
	pages = {65-98},
	year = {2017},
	doi = {10.1137/141000671},
	URL = {https://doi.org/10.1137/141000671},
}

@article{10.1145/3276490,
	author = {Bezanson, Jeff and Chen, Jiahao and Chung, Benjamin and Karpinski, Stefan and Shah, Viral B. and Vitek, Jan and Zoubritzky, Lionel},
	title = {Julia: Dynamism and Performance Reconciled by Design},
	year = {2018},
	issue_date = {November 2018},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {2},
	number = {OOPSLA},
	url = {https://doi.org/10.1145/3276490},
	doi = {10.1145/3276490},
	journal = {Proc. ACM Program. Lang.},
	month = {oct},
	articleno = {120},
	numpages = {23},
	keywords = {just-in-time compilation, multiple dispatch, dynamic languages}
}

@article{Stanitzki:2020bnx,
    author = "Stanitzki, Marcel and Strube, Jan",
    title = "{Performance of {Julia} for High Energy Physics Analyses}",
    eprint = "2003.11952",
    archivePrefix = "arXiv",
    primaryClass = "physics.comp-ph",
    reportNumber = "PNNL-SA-151985 DESY 20-056, DESY-20-056, PNNL-SA-151985",
    doi = "10.1007/s41781-021-00053-3",
    url = "https://doi.org/10.1007/s41781-021-00053-3",
    journal = "Comput. Softw. Big Sci.",
    volume = "5",
    number = "1",
    pages = "10",
    year = "2021"
}

@misc{eschle2023potential,
      title={Potential of the {Julia} programming language for high energy physics computing}, 
      author={J. Eschle and T. Gal and M. Giordano and P. Gras and B. Hegner and L. Heinrich and U. Hernandez Acosta and S. Kluth and J. Ling and P. Mato and M. Mikhasenko and A. Moreno Brice√±o and J. Pivarski and K. Samaras-Tsakiris and O. Schulz and G. . A. Stewart and J. Strube and V. Vassilev},
      year={2023},
      eprint={2306.03675},
      archivePrefix={arXiv},
      primaryClass={hep-ph},
      url={https://doi.org/10.48550/arXiv.2306.03675}
}

@article{Naumann_2014,
doi = {10.1088/1742-6596/513/5/052023},
url = {https://dx.doi.org/10.1088/1742-6596/513/5/052023},
year = {2014},
month = {jun},
publisher = {},
volume = {513},
number = {5},
pages = {052023},
author = {Axel Naumann},
title = {C++ evolves!},
journal = {Journal of Physics: Conference Series},
abstract = {C++ is used throughout High Energy Physics. CERN participates in the development of its standard. There has been a major shift in standardization procedures that will be visible starting 2014 with an increase rate of new standardized features. Already the current C++11 has major improvements, also for coding novices, related to simplicity, expressiveness, performance and robustness. Other major improvements are in the area of concurrency, where C++ is now on par with most other high level languages. To benefit from these language improvements and from the massive improvements in compiler technology for instance in usability, access to current compilers is crucial. Use of current C++ compiled with current compilers can considerably improve C++ for the HEP physicist community.}
}

@misc{ms-security-2019,
  author       = {Matt Miller},
  howpublished = {},
  title        = {Trends, challenges, and strategic shifts in the software vulnerability mitigation landscape},
  year         = {2019},
  url = {https://github.com/Microsoft/MSRC-Security-Research/blob/master/presentations/2019_02_BlueHatIL/2019_01%20-%20BlueHatIL%20-%20Trends%2C%20challenge%2C%20and%20shifts%20in%20software%20vulnerability%20mitigation.pdf}
}

@techreport{nsa-cybersecurity,
  author      = {"National Security Agency"},
  institution = {"National Security Agency"},
  title       = {Software Memory Safety},
  year        = {2022},
  url = {https://media.defense.gov/2022/Nov/10/2003112742/-1/-1/0/CSI_SOFTWARE_MEMORY_SAFETY.PDF}
}

@online{rust-lang,
title = {Rust},
url = {https://www.rust-lang.org}
}

@article{perkel-rust-science,
  author          = {Jeffrey M Perkel},
  journal         = {Nature},
  title           = {Why scientists are turning to Rust},
  volume          = {588},
  pages = {185-186},
  year            = {2020},
  url = {https://doi.org/10.1038/d41586-020-03382-2}
}

@article{perkel-julia-science,
  author          = {Jeffrey M Perkel},
  journal         = {Nature},
  title           = {Julia: come for the syntax, stay for the speed},
  volume          = {572},
  pages = {141-142},
  year            = {2019},
  url = {https://doi.org/10.1038/d41586-019-02310-3}
}

@article{Cacciari:2011ma,
    author = "Cacciari, Matteo and Salam, Gavin P. and Soyez, Gregory",
    title = "{FastJet User Manual}",
    eprint = "1111.6097",
    archivePrefix = "arXiv",
    primaryClass = "hep-ph",
    reportNumber = "CERN-PH-TH-2011-297",
    doi = "10.1140/epjc/s10052-012-1896-2",
    journal = "Eur. Phys. J. C",
    volume = "72",
    pages = "1896",
    year = "2012"
}

@article{Cacciari:2005hq,
    author = "Cacciari, Matteo and Salam, Gavin P.",
    title = "{Dispelling the $N^{3}$ myth for the $k_t$ jet-finder}",
    eprint = "hep-ph/0512210",
    archivePrefix = "arXiv",
    reportNumber = "LPTHE-05-32",
    doi = "10.1016/j.physletb.2006.08.037",
    journal = "Phys. Lett. B",
    volume = "641",
    pages = "57--61",
    year = "2006"
}

@online{fastjet-web,
  title        = {FastJet},
  url = {https://fastjet.fr}
}

@article{Matteo_Cacciari_2008,
doi = {10.1088/1126-6708/2008/04/063},
url = {https://dx.doi.org/10.1088/1126-6708/2008/04/063},
year = {2008},
month = {apr},
publisher = {},
volume = {2008},
number = {04},
pages = {063},
author = {Matteo Cacciari and  Gavin P. Salam and  Gregory Soyez},
title = {The anti-kt jet clustering algorithm},
journal = {Journal of High Energy Physics},
abstract = {The kt and Cambridge/Aachen inclusive jet finding algorithms for hadron-hadron collisions can be seen as belonging to a broader class of sequential recombination jet algorithms, parametrised by the power of the energy scale in the distance measure. We examine some properties of a new member of this class, for which the power is negative. This ``anti-kt'' algorithm essentially behaves like an idealised cone algorithm, in that jets with only soft fragmentation are conical, active and passive areas are equal, the area anomalous dimensions are zero, the non-global logarithms are those of a rigid boundary and the Milan factor is universal.  None of these properties hold for existing sequential recombination algorithms, nor for cone algorithms with split-merge steps, such as SISCone. They are however the identifying characteristics of the collinear unsafe plain ``iterative cone'' algorithm, for which the anti-kt algorithm provides a natural, fast, infrared and collinear safe replacement.}
}

@online{polyglot-jets-conference,
  author = {Graeme A Stewart and Philippe Gras and Benedikt Hegner and Atell Krasnopolski},
  title = {Polyglot Jet Finding, {CHEP} 2023 Presentation},
  year = {2023},
  url = {https://indico.jlab.org/event/459/contributions/11540/}
}

@online{polyglot-jets-zenodo,
  author = {Graeme A Stewart and Philippe Gras and Benedikt Hegner and Atell Krasnopolski},
  title = {Polyglot Jet Finding Benchmarks},
  year = {2023},
  url = {https://doi.org/10.5281/zenodo.8307669},
  doi = {10.5281/zenodo.8307669}
}